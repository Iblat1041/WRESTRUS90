services:
  db:
    image: postgres:16-alpine
    container_name: postgres_dev
    env_file:
      - .env
    ports:
      - "5000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  fastapi:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: fastapi_container
    command: sh -c "export PYTHONPATH=/app:/app/fastapi_app && alembic -c db/alembic.ini upgrade head && python fastapi_app/main.py"
    env_file: 
      - .env
    environment:
      - RUNNING_IN_DOCKER=true
    ports:
      - "8000:8000"
    volumes:
      - ../fastapi_app:/app/fastapi_app:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  celery:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: celery_worker
    command: sh -c "export PYTHONPATH=/app:/app/fastapi_app && celery -A fastapi_app.vk.celery_app.celery_app worker --loglevel=info --concurrency=2"
    env_file: 
      - .env
    environment:
      - RUNNING_IN_DOCKER=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  celery_beat:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: celery_beat
    command: sh -c "export PYTHONPATH=/app:/app/fastapi_app && celery -A fastapi_app.vk.celery_app.celery_app beat --loglevel=info"
    env_file: 
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin_container
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    env_file: 
      - .env
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
